//  
//  This design was downloaded from http://www.cbl.ncsu.edu.
//  (Currently available from: http://www.archive.org)
//  
//  Users may copy and distribute the benchmarks as long as they do not 
//  charge for these services.
//  All users of these benchmarks are request to refer to them in presentations 
//  and publications as named in the respective directories (e. g. ISCAS'95,
//  LayoutSynth92, etc.), while providing a pointer to the benchmark access by 
//  ftp from benchmarks@cbl.ncsu.edu.
//  
//  The design was synthesized with Cadence RTL Compiler in a quick 
//  synthesis run.
//  
//  
//  (c) Copyright 2005, Cadence Design Systems, Inc.  All rights reserved. 
//  
//  Permission is hereby granted, free of charge, to any person obtaining
//  a copy of this software and associated documentation files (the
//  "Software"), to deal in the Software without restriction, including
//  without limitation the rights to use, copy, modify, merge, publish,
//  distribute, or sublicense, the Software, and to permit persons to whom
//  the Software is furnished to do so, subject to the following conditions:
//  
//  The above copyright notice and this permission notice shall be included
//  in all copies or substantial portions of the Software.
//  
//  All other requirements of any other incorporated license or permissions
//  statements shall apply.
//  
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
//  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
//  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
//  USE OF THE SOFTWARE IS AT YOUR SOLE RISK AND EXPENSE.  IN NO EVENT SHALL
//  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
//  OTHER LIABILITY, OF ANY TYPE, WHETHER IN AN ACTION OF CONTRACT, TORT OR
//  OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
//  THE USE OR OTHER DEALINGS IN THE SOFTWARE. 
//  

// Generated by Cadence RTL Compiler (RC) v05.10-b006_1

module s208_1(blif_clk_net, blif_reset_net, P_0, C_8, C_7, C_6,
     C_5, C_4, C_3, C_2, C_1, C_0, Z);
  input blif_clk_net, blif_reset_net, P_0, C_8, C_7, C_6, C_5, C_4,
       C_3, C_2, C_1, C_0;
  output Z;
  wire blif_clk_net, blif_reset_net, P_0, C_8, C_7, C_6, C_5, C_4, C_3,
       C_2, C_1, C_0;
  wire Z;
  wire X_2, X_3, X_4, X_5, X_6, X_7, X_8, n_0;
  wire n_3, n_8, n_11, n_19, n_21, n_24, n_26, n_27;
  wire n_28, n_29, n_30, n_32, n_33, n_34, n_36, n_37;
  wire n_39, n_40, n_41, n_42, n_44, n_45, n_46, n_47;
  wire n_48, n_49, n_50, n_51, n_52, n_53, n_55, n_57;
  wire n_58, n_59, n_60, n_62, n_63, n_64, n_65, n_66;
  wire n_67, n_68, n_69, n_70, n_99, n_111, n_114, n_116;
  wire n_123, n_129, n_130, n_132, n_133, n_134, n_135, n_137;
  wire n_138, n_139, n_140, n_142, n_144, n_145, n_150, n_151;
  DFFSRX1 X_8_reg(.RN (n_70), .SN (1'b1), .CK (blif_clk_net), .D
       (n_68), .Q (X_8), .QN ());
  NAND4X1 g319(.A (n_57), .B (n_60), .C (n_59), .D (n_67), .Y (Z));
  DFFSRX1 X_7_reg(.RN (n_70), .SN (1'b1), .CK (blif_clk_net), .D
       (n_69), .Q (X_7), .QN ());
  NAND2X1 g320(.A (n_66), .B (n_62), .Y (n_69));
  MX2X1 g317(.A (n_3), .B (X_8), .S0 (n_63), .Y (n_68));
  DFFSRX1 X_6_reg(.RN (n_70), .SN (1'b1), .CK (blif_clk_net), .D
       (n_64), .Q (X_6), .QN ());
  INVX1 g327(.A (n_65), .Y (n_67));
  NAND2X1 g323(.A (n_58), .B (X_7), .Y (n_66));
  NAND3X1 g328(.A (n_42), .B (n_44), .C (n_53), .Y (n_65));
  OAI21X1 g329(.A0 (n_132), .A1 (X_6), .B0 (n_55), .Y (n_64));
  NAND2X1 g322(.A (X_7), .B (n_138), .Y (n_63));
  NAND2X1 g324(.A (n_137), .B (n_0), .Y (n_62));
  OAI21X1 g338(.A0 (n_45), .A1 (C_0), .B0 (P_0), .Y (n_60));
  AND2X1 g332(.A (n_52), .B (n_48), .Y (n_59));
  INVX1 g325(.A (n_137), .Y (n_58));
  DFFSRX1 X_4_reg(.RN (n_70), .SN (1'b1), .CK (blif_clk_net), .D
       (n_50), .Q (X_4), .QN ());
  DFFSRX1 X_5_reg(.RN (n_70), .SN (1'b1), .CK (blif_clk_net), .D
       (n_51), .Q (X_5), .QN ());
  DFFSRX1 X_2_reg(.RN (n_70), .SN (1'b1), .CK (blif_clk_net), .D
       (n_49), .Q (X_2), .QN ());
  AOI21X1 g340(.A0 (n_114), .A1 (C_1), .B0 (n_40), .Y (n_57));
  NAND2X1 g333(.A (n_132), .B (X_6), .Y (n_55));
  NAND3X1 g336(.A (C_3), .B (n_47), .C (n_11), .Y (n_53));
  DFFSRX1 X_3_reg(.RN (n_70), .SN (1'b1), .CK (blif_clk_net), .D
       (n_36), .Q (X_3), .QN ());
  NAND4X1 g341(.A (n_37), .B (X_8), .C (n_0), .D (n_41), .Y (n_52));
  XOR2X1 g342(.A (X_5), .B (n_129), .Y (n_51));
  XOR2X1 g334(.A (n_46), .B (n_34), .Y (n_50));
  DFFSRX1 X_1_reg(.RN (n_70), .SN (1'b1), .CK (blif_clk_net), .D
       (n_28), .Q (n_145), .QN ());
  AND2X1 g353(.A (n_32), .B (n_133), .Y (n_49));
  NAND4X1 g337(.A (n_47), .B (C_4), .C (n_33), .D (n_46), .Y (n_48));
  NOR2X1 g355(.A (n_8), .B (n_29), .Y (n_45));
  NAND3X1 g339(.A (C_2), .B (n_26), .C (n_30), .Y (n_44));
  NAND4X1 g348(.A (n_139), .B (C_7), .C (X_7), .D (n_41), .Y (n_42));
  INVX1 g349(.A (n_39), .Y (n_40));
  NAND4X1 g350(.A (n_139), .B (X_6), .C (C_6), .D (n_24), .Y (n_39));
  AND2X1 g352(.A (n_140), .B (C_8), .Y (n_37));
  XOR2X1 g347(.A (n_33), .B (n_133), .Y (n_36));
  NOR2X1 g351(.A (n_134), .B (n_33), .Y (n_34));
  OR2X1 g357(.A (n_114), .B (n_30), .Y (n_32));
  INVX1 g359(.A (n_140), .Y (n_29));
  OAI21X1 g362(.A0 (n_142), .A1 (P_0), .B0 (n_27), .Y (n_28));
  NOR2X1 g345(.A (n_27), .B (n_30), .Y (n_47));
  INVX1 g356(.A (n_27), .Y (n_26));
  AND2X1 g361(.A (n_111), .B (n_24), .Y (n_41));
  NAND2X1 g363(.A (n_142), .B (P_0), .Y (n_27));
  NOR2X1 g366(.A (n_11), .B (n_144), .Y (n_21));
  NOR2X1 g369(.A (n_30), .B (n_46), .Y (n_19));
  NOR2X1 g364(.A (X_5), .B (n_116), .Y (n_24));
  INVX1 g373(.A (n_99), .Y (n_46));
  NAND2X1 g370(.A (X_5), .B (C_5), .Y (n_8));
  INVX1 g388(.A (n_33), .Y (n_11));
  INVX1 g372(.A (X_8), .Y (n_3));
  CLKBUFX2 g377(.A (X_2), .Y (n_30));
  INVX1 g390(.A (blif_reset_net), .Y (n_70));
  INVX1 g378(.A (X_7), .Y (n_0));
  NAND3X1 g20(.A (P_0), .B (X_2), .C (n_144), .Y (n_134));
  INVX1 g27(.A (X_4), .Y (n_99));
  INVX2 g28(.A (X_3), .Y (n_33));
  NAND2X1 g418(.A (n_130), .B (X_5), .Y (n_132));
  INVX1 g23(.A (X_6), .Y (n_111));
  AND2X1 g10(.A (P_0), .B (n_144), .Y (n_114));
  INVX1 g11(.A (P_0), .Y (n_116));
  NAND2X1 g26(.A (X_6), .B (X_5), .Y (n_123));
  INVX1 g428(.A (n_150), .Y (n_129));
  INVX1 g429(.A (n_150), .Y (n_130));
  CLKBUFX1 g430(.A (n_134), .Y (n_133));
  AND2X1 g432(.A (P_0), .B (n_145), .Y (n_135));
  NOR2X1 g433(.A (n_123), .B (n_151), .Y (n_137));
  NOR2X1 g426_dup(.A (n_123), .B (n_151), .Y (n_138));
  AND2X1 g434(.A (n_19), .B (n_21), .Y (n_139));
  AND2X1 g360_dup(.A (n_19), .B (n_21), .Y (n_140));
  INVX1 g435(.A (n_144), .Y (n_142));
  CLKBUFX2 g437(.A (n_145), .Y (n_144));
  NAND4X1 g439(.A (n_135), .B (X_3), .C (X_2), .D (X_4), .Y (n_150));
  NAND4X1 g431_dup(.A (n_135), .B (X_3), .C (X_2), .D (X_4), .Y
       (n_151));
endmodule


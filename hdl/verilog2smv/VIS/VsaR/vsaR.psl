DEFINE
npc_0 := m_vsaR.NPC[0:0];
npc_4 := m_vsaR.NPC[4:4];
pc_0 := m_vsaR.PC[0:0];
pc_1 := m_vsaR.PC[1:1];
pc_2 := m_vsaR.PC[2:2];
pc_3 := m_vsaR.PC[3:3];
pc_4 := m_vsaR.PC[4:4];
npc_42 := m_vsaR.NPC[4:2];
pc_42 := m_vsaR.PC[4:2];
npc_43 := m_vsaR.NPC[4:3];
pc_43 := m_vsaR.PC[4:3];
alu_0 := m_vsaR.ALUOutput[0:0];
alu_1 := m_vsaR.ALUOutput[1:1];
alu_2 := m_vsaR.ALUOutput[2:2];
alu_3 := m_vsaR.ALUOutput[3:3];
alu_4 := m_vsaR.ALUOutput[4:4];
adFld1_10 := m_vsaR.adFld1[1:0];
adFld2_10 := m_vsaR.adFld2[1:0];
state_21 := m_vsaR.State[2:1];
state_0 := m_vsaR.State[0:0];
state_1 := m_vsaR.State[1:1];
state_2 := m_vsaR.State[2:2];
state_10 := m_vsaR.State[1:0];
a_0 := m_vsaR.A_SUBSTITUTED[0:0];
a_1 := m_vsaR.A_SUBSTITUTED[1:1];
a_2 := m_vsaR.A_SUBSTITUTED[2:2];
a_3 := m_vsaR.A_SUBSTITUTED[3:3];
a_4 := m_vsaR.A_SUBSTITUTED[4:4];
b_0 := m_vsaR.B[0:0];
b_1 := m_vsaR.B[1:1];
b_2 := m_vsaR.B[2:2];
b_3 := m_vsaR.B[3:3];
b_4 := m_vsaR.B[4:4];
funFld_20 := m_vsaR.funFld[2:0];

PSLSPEC
always (((m_vsaR.Registers[1] >= 0d5_12 & m_vsaR.Registers[1] <= 0d5_15)) &
                ((m_vsaR.Registers[2] >= 0d5_8 & m_vsaR.Registers[2] <= 0d5_11 )) &
                ((m_vsaR.Registers[3] >= 0d5_4 & m_vsaR.Registers[3] <= 0d5_7  )) &
                m_vsaR.LMD = 0d5_0 & m_vsaR.ALUOutput = 0d5_0 & m_vsaR.PC = 0d5_0);

PSLSPEC
always (pc_0 = 0b1_0 & npc_0 = 0b1_0);

PSLSPEC
always (m_vsaR.Registers[0] = 0d5_0);

PSLSPEC
always (state_2 = 0d1_0 | state_10 = 0d2_0);

PSLSPEC
always (adFld1_10 != adFld2_10 | (state_21 = 0d2_0 | m_vsaR.A_SUBSTITUTED = m_vsaR.B));

PSLSPEC
always (!(m_vsaR.branch = 0d1_1 & state_2 = 0d1_1) | ((m_vsaR.Cond = 0d1_0 | m_vsaR.A_SUBSTITUTED = 0d5_0) & (m_vsaR.A_SUBSTITUTED != 0d5_0 | m_vsaR.Cond = 0d1_1)));

PSLSPEC
always (!(m_vsaR.regRegALU = 0d1_1 & funFld_20 = 0b3_100 & adFld1_10 = adFld2_10) | (state_2 = 0d1_0 | m_vsaR.ALUOutput = 0d5_0));

PSLSPEC
always (!(m_vsaR.regRegALU = 0d1_1 & funFld_20 = 0b3_100 & (state_2 = 0b1_1 | state_10 = 0d2_0 | state_10 = 0d2_3)) | 
                ((a_4 != b_4 | alu_4 = 0b1_0) & (alu_4 != 0b1_0 | a_4 = b_4) &
                (a_3 != b_3 | alu_3 = 0b1_0) & (alu_3 != 0b1_0 | a_3 = b_3) &
                (a_2 != b_2 | alu_2 = 0b1_0) & (alu_2 != 0b1_0 | a_2 = b_2) &
                (a_1 != b_1 | alu_1 = 0b1_0) & (alu_1 != 0b1_0 | a_1 = b_1) &
                (a_0 != b_0 | alu_0 = 0b1_0) & (alu_0 != 0b1_0 | a_0 = b_0) ));

PSLSPEC
always (!(m_vsaR.regRegALU = 0d1_1 & funFld_20 = 0b3_010 & (state_2 = 0d1_1 | state_10 = 0d2_0 | state_10 = 0d2_3)) |
                ((!(a_4 = 0d1_1 & b_4 = 0d1_1) | alu_4 = 0d1_1) & (alu_4 = 0d1_0 | (a_4 = 0d1_1 & b_4 = 0d1_1)) &
                (!(a_3 = 0d1_1 & b_3 = 0d1_1) | alu_3 = 0d1_1) & (alu_3 = 0d1_0 | (a_3 = 0d1_1 & b_3 = 0d1_1)) &
                (!(a_2 = 0d1_1 & b_2 = 0d1_1) | alu_2 = 0d1_1) & (alu_2 = 0d1_0 | (a_2 = 0d1_1 & b_2 = 0d1_1)) &
                (!(a_1 = 0d1_1 & b_1 = 0d1_1) | alu_1 = 0d1_1) & (alu_1 = 0d1_0 | (a_1 = 0d1_1 & b_1 = 0d1_1)) &
                (!(a_0 = 0d1_1 & b_0 = 0d1_1) | alu_0 = 0d1_1) & (alu_0 = 0d1_0 | (a_0 = 0d1_1 & b_0 = 0d1_1)) ));

PSLSPEC
always (!(m_vsaR.regRegALU = 0d1_1 & funFld_20 = 0b3_011 & (state_2 = 0d1_1 | state_10 = 0d2_0 | state_10 = 0d2_3)) |
                ((!(a_4 = 0d1_0 & b_4 = 0d1_0) | alu_4 = 0d1_0) & (alu_4 = 0d1_1 | (a_4 = 0d1_0 & b_4 = 0d1_0)) &
                (!(a_3 = 0d1_0 & b_3 = 0d1_0) | alu_3 = 0d1_0) & (alu_3 = 0d1_1 | (a_3 = 0d1_0 & b_3 = 0d1_0)) &
                (!(a_2 = 0d1_0 & b_2 = 0d1_0) | alu_2 = 0d1_0) & (alu_2 = 0d1_1 | (a_2 = 0d1_0 & b_2 = 0d1_0)) &
                (!(a_1 = 0d1_0 & b_1 = 0d1_0) | alu_1 = 0d1_0) & (alu_1 = 0d1_1 | (a_1 = 0d1_0 & b_1 = 0d1_0)) &
                (!(a_0 = 0d1_0 & b_0 = 0d1_0) | alu_0 = 0d1_0) & (alu_0 = 0d1_1 | (a_0 = 0d1_0 & b_0 = 0d1_0)) ));

PSLSPEC
always (!(m_vsaR.regRegALU = 0d1_1 & funFld_20 = 0b3_001 & adFld1_10 = adFld2_10) | (state_2 = 0d1_0 | m_vsaR.ALUOutput = 0d5_0));

PSLSPEC
always (!(state_0 = 0d1_1 | state_1 = 0d1_1) | ( (pc_1 = 0d1_1 | npc_42 = pc_42) & (pc_2 = 0d1_1 | npc_43 = pc_43) & (pc_3 = 0d1_1 | npc_4 = pc_4) ));

PSLSPEC
always (!(state_2 = 0d1_1 & m_vsaR.branch = 0d1_1 & m_vsaR.Cond = 0d1_1 & !(m_vsaR.ALUOutput = m_vsaR.NPC)) | !(m_vsaR.PC = m_vsaR.NPC));

PSLSPEC
always (!(state_2 = 0d1_1 & (m_vsaR.branch = 0d1_0 | m_vsaR.Cond = 0d1_0)) | m_vsaR.PC = m_vsaR.NPC);

PSLSPEC
always (!(m_vsaR.St_WB = 0d1_1 & m_vsaR.branch = 0d1_1 & adFld1_10 = 0d2_0) | m_vsaR.PC = m_vsaR.ALUOutput);

PSLSPEC
always (m_vsaR.R0eqR1 = 0d1_1 | m_vsaR.R0eqR2 = 0d1_1 | m_vsaR.R0eqR3 = 0d1_1 | m_vsaR.R1eqR2 = 0d1_1 | m_vsaR.R1eqR3 = 0d1_1 | m_vsaR.R2eqR3 = 0d1_1 | m_vsaR.AeqR0 = 0d1_1 | m_vsaR.AeqR1 = 0d1_1 | m_vsaR.AeqR2 = 0d1_1 | m_vsaR.AeqR3 = 0d1_1 | m_vsaR.BeqR0 = 0d1_1 | m_vsaR.BeqR1 = 0d1_1 | m_vsaR.BeqR2 = 0d1_1 | m_vsaR.BeqR3 = 0d1_1 | m_vsaR.AeqB = 0d1_1);

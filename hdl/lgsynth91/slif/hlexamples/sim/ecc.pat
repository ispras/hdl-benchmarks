# ECC Pattern file
#
# Resets system with the first two patterns, then 
# sends three sets of data:
#
# i) data_in = 0x21, no transmission error
#	=> data_out = 0x21, detected_error = 0b00
#
# ii) data_in = 0x43, one transmission error
#	=> data_out = 0x43, detected_error = 0b01
#
# iii) data_in = 0x65, two transmission error (cannot be recovered)
#	=> data_out = 0x--, detected_error = 0b11 (data_out is invalid)
#
#
#

.inputs  CLK RESET new_data[0:0] data_in[0:0] data_in[1:1] data_in[2:2]
	 data_in[3:3] data_in[4:4] data_in[5:5] data_in[6:6]
	 data_in[7:7] error[0:0] ;

110111111110;
010000000001;
#
# First input to the system (data_in = 0x21)
#
100000000000;
000000000000;
101100001000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
000000000000;
100000000000;
000000000000;
100000000000;
#
# Second input to the system (data_in = 0x43)
#
101110000100;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000001;	# Transmission error (last bit = 1)
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
#
# Third input to the system (data_in = 0x65)
#
101101001100;
000000000000;
100000000001;	# Transmission error (last bit = 1)
000000000001;	# Second transmission error (data_out cannot be corrected)
100000000000;
000000000000;
100000000000;
000000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000001;
100000000001;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000001;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;
000000000000;
100000000000;

// IWLS benchmark module "s344.bench" printed on Wed May 29 21:27:57 2002
module \s344.bench (START, B0, B1, B2, B3, A0, A1, A2, A3, P4, P5, P6, P7, P0, P1, P2, P3, CNTVCON2, CNTVCO2, READY);
input
  START,
  A0,
  A1,
  A2,
  A3,
  B0,
  B1,
  B2,
  B3;
output
  CNTVCON2,
  READY,
  CNTVCO2,
  P0,
  P1,
  P2,
  P3,
  P4,
  P5,
  P6,
  P7;
reg
  MRVQN0,
  MRVQN1,
  MRVQN2,
  MRVQN3,
  CT0,
  CT1,
  CT2,
  ACVQN0,
  ACVQN1,
  ACVQN2,
  ACVQN3,
  AX0,
  AX1,
  AX2,
  AX3;
wire
  MRVG4VDVAD2NF,
  ADDVG3VCNVAD4NF,
  ADDVG4VCNVOR2NF,
  CNTVG1VD,
  ADDVG2VCNVAD3NF,
  CNTVG1VZ1,
  MRVG2VDVAD1NF,
  SMVG4VG1VAD1NF,
  MRVG2VD,
  CNTVG2VZ1,
  ADDVG3VSN,
  \[20] ,
  SMVG3VX,
  ADDVG2VCNVOR2NF,
  SMVG3VG1VAD1NF,
  ADDVG4VCNVAD2NF,
  \[21] ,
  ADDVG1VPVOR1NF,
  BMVG3VX,
  CNTVG2VG2VOR1NF,
  AMVG3VX,
  \[22] ,
  \[23] ,
  ADDVG4VSN,
  \[24] ,
  MRVG3VDVAD1NF,
  ADDVG3VCNVAD2NF,
  \[25] ,
  ADDVG2VCNVAD1NF,
  \[26] ,
  ACVG1VD1,
  CNTVCON1,
  ADDVG1VP,
  MRVG1VDVAD2NF,
  \[27] ,
  \[28] ,
  \[29] ,
  ADDVG2VSN,
  ACVG2VD1,
  ADDVG3VCNVOR1NF,
  CNTVG2VD,
  ADDVG2VCNVAD4NF,
  CNTVG2VZ,
  CNTVG3VG2VOR1NF,
  MRVG1VDVAD1NF,
  AMVG2VG1VAD2NF,
  ACVG3VD1,
  BMVG2VG1VAD2NF,
  MRVG3VD,
  SMVG2VG1VAD2NF,
  CNTVG2VD1,
  ADDVG3VCN,
  \[30] ,
  SMVG4VX,
  ADDVG4VCNVAD3NF,
  \[31] ,
  ADSH,
  ACVG4VD1,
  BMVG4VX,
  AMVG4VX,
  AMVG5VG1VAD2NF,
  IINIIT,
  \[32] ,
  AMVG2VG1VAD1NF,
  BMVG5VG1VAD2NF,
  \[33] ,
  ADDVG4VCN,
  BMVG2VG1VAD1NF,
  SMVG5VG1VAD2NF,
  \[34] ,
  MRVG3VDVAD2NF,
  AM0,
  AM1,
  AM2,
  ADDVG3VCNVAD3NF,
  AM3,
  CNTVCO1,
  ADDVG4VCNVOR1NF,
  \[35] ,
  ADDVG2VCNVAD2NF,
  AMVG4VG1VAD2NF,
  ADDVG1VCN,
  \[36] ,
  BMVG4VG1VAD2NF,
  MRVG2VDVAD2NF,
  \[37] ,
  SMVG4VG1VAD2NF,
  AMVG5VG1VAD1NF,
  \[38] ,
  AD0N,
  BMVG5VG1VAD1NF,
  MRVG1VD,
  \[39] ,
  AMVG3VG1VAD2NF,
  ADDVG2VCN,
  AD1N,
  BMVG3VG1VAD2NF,
  ADDVG3VCNVOR2NF,
  SMVG2VX,
  AD2N,
  ADDVG2VCNVOR1NF,
  SMVG3VG1VAD2NF,
  ADDVG4VCNVAD1NF,
  AMVG4VG1VAD1NF,
  AD3N,
  BMVG2VX,
  AMVG2VX,
  BMVG4VG1VAD1NF,
  CNTVG3VD,
  CNTVG3VZ,
  MRVG4VDVAD1NF,
  ADDVG3VCNVAD1NF,
  MRVG4VD,
  SMVG2VG1VAD1NF,
  AMVG3VG1VAD1NF,
  \[15] ,
  BMVG3VG1VAD1NF,
  \[40] ,
  \[16] ,
  CNTVG3VZ1,
  SMVG5VX,
  ADDVG4VCNVAD4NF,
  \[17] ,
  BMVG5VX,
  AMVG5VX,
  \[18] ,
  READYN,
  \[19] ,
  SMVG5VG1VAD1NF;
assign
  MRVG4VDVAD2NF = ~BMVG5VX & ~ADSH,
  ADDVG3VCNVAD4NF = ~ADDVG2VCN & (~AD2N & ~ACVQN2),
  ADDVG4VCNVOR2NF = ~ADDVG3VCN | (~AD3N | ~ACVQN3),
  CNTVG1VD = CNTVG1VZ1 & ~START,
  ADDVG2VCNVAD3NF = ADDVG2VCN & ADDVG2VCNVOR2NF,
  CNTVG1VZ1 = ~READYN | ~CT0,
  MRVG2VDVAD1NF = ADSH & ~MRVQN2,
  SMVG4VG1VAD1NF = ~ADSH & ~ACVQN2,
  MRVG2VD = ~MRVG2VDVAD1NF & ~MRVG2VDVAD2NF,
  CNTVG2VZ1 = ~CNTVG2VD1 | ~CT1,
  ADDVG3VSN = ~ADDVG3VCNVAD3NF & ~ADDVG3VCNVAD4NF,
  \[20]  = ~MRVQN1,
  SMVG3VX = ~SMVG3VG1VAD1NF & ~SMVG3VG1VAD2NF,
  ADDVG2VCNVOR2NF = ~ADDVG1VCN | (~AD1N | ~ACVQN1),
  SMVG3VG1VAD1NF = ~ADSH & ~ACVQN1,
  ADDVG4VCNVAD2NF = ADDVG4VCNVOR1NF & ~ADDVG3VCN,
  \[21]  = ~MRVQN2,
  ADDVG1VPVOR1NF = ~AD0N | ~ACVQN0,
  BMVG3VX = ~BMVG3VG1VAD1NF & ~BMVG3VG1VAD2NF,
  CNTVG2VG2VOR1NF = CNTVG2VD1 | CT1,
  AMVG3VX = ~AMVG3VG1VAD1NF & ~AMVG3VG1VAD2NF,
  \[22]  = ~MRVQN3,
  \[23]  = ~CNTVCO1 | ~CT2,
  ADDVG4VSN = ~ADDVG4VCNVAD3NF & ~ADDVG4VCNVAD4NF,
  \[24]  = ~CNTVCON1 & CT2,
  MRVG3VDVAD1NF = ADSH & ~MRVQN3,
  ADDVG3VCNVAD2NF = ADDVG3VCNVOR1NF & ~ADDVG2VCN,
  \[25]  = ~READYN,
  ADDVG2VCNVAD1NF = ~AD1N & ~ACVQN1,
  \[26]  = CNTVG3VD,
  ACVG1VD1 = SMVG2VX | START,
  CNTVCON1 = ~CT0 | ~CT1,
  ADDVG1VP = ~ADDVG1VCN | ~ADDVG1VPVOR1NF,
  CNTVCON2 = \[23] ,
  MRVG1VDVAD2NF = ~BMVG2VX & ~ADSH,
  \[27]  = CNTVG2VD,
  \[28]  = CNTVG1VD,
  \[29]  = ACVG4VD1,
  ADDVG2VSN = ~ADDVG2VCNVAD3NF & ~ADDVG2VCNVAD4NF,
  ACVG2VD1 = SMVG3VX | START,
  ADDVG3VCNVOR1NF = ~AD2N | ~ACVQN2,
  CNTVG2VD = ~START & ~CNTVG2VZ,
  ADDVG2VCNVAD4NF = ~ADDVG1VCN & (~AD1N & ~ACVQN1),
  CNTVG2VZ = ~CNTVG2VZ1 | ~CNTVG2VG2VOR1NF,
  CNTVG3VG2VOR1NF = ~CNTVCON1 | CT2,
  MRVG1VDVAD1NF = ADSH & ~MRVQN1,
  AMVG2VG1VAD2NF = IINIIT & A0,
  ACVG3VD1 = SMVG4VX | START,
  BMVG2VG1VAD2NF = READYN & B0,
  READY = \[25] ,
  MRVG3VD = ~MRVG3VDVAD1NF & ~MRVG3VDVAD2NF,
  SMVG2VG1VAD2NF = ~ADDVG2VSN & ADSH,
  CNTVG2VD1 = READYN & CT0,
  ADDVG3VCN = ~ADDVG3VCNVAD1NF & ~ADDVG3VCNVAD2NF,
  \[30]  = ACVG3VD1,
  SMVG4VX = ~SMVG4VG1VAD1NF & ~SMVG4VG1VAD2NF,
  ADDVG4VCNVAD3NF = ADDVG4VCN & ADDVG4VCNVOR2NF,
  \[31]  = ACVG2VD1,
  ADSH = ~IINIIT & READYN,
  ACVG4VD1 = SMVG5VX | START,
  BMVG4VX = ~BMVG4VG1VAD1NF & ~BMVG4VG1VAD2NF,
  AMVG4VX = ~AMVG4VG1VAD1NF & ~AMVG4VG1VAD2NF,
  AMVG5VG1VAD2NF = IINIIT & A3,
  IINIIT = ~CT2 & (~CT1 & ~CT0),
  \[32]  = ACVG1VD1,
  AMVG2VG1VAD1NF = ~IINIIT & AX0,
  BMVG5VG1VAD2NF = READYN & B3,
  \[33]  = MRVG4VD,
  ADDVG4VCN = ~ADDVG4VCNVAD1NF & ~ADDVG4VCNVAD2NF,
  BMVG2VG1VAD1NF = ~READYN & ~MRVQN0,
  SMVG5VG1VAD2NF = ~ADDVG4VCN & ADSH,
  \[34]  = MRVG3VD,
  MRVG3VDVAD2NF = ~BMVG4VX & ~ADSH,
  AM0 = ~AMVG2VX,
  AM1 = ~AMVG3VX,
  AM2 = ~AMVG4VX,
  ADDVG3VCNVAD3NF = ADDVG3VCN & ADDVG3VCNVOR2NF,
  AM3 = ~AMVG5VX,
  CNTVCO1 = CT0 & CT1,
  CNTVCO2 = \[24] ,
  ADDVG4VCNVOR1NF = ~AD3N | ~ACVQN3,
  \[35]  = MRVG2VD,
  ADDVG2VCNVAD2NF = ADDVG2VCNVOR1NF & ~ADDVG1VCN,
  AMVG4VG1VAD2NF = IINIIT & A2,
  ADDVG1VCN = AD0N | ACVQN0,
  \[36]  = MRVG1VD,
  BMVG4VG1VAD2NF = READYN & B2,
  MRVG2VDVAD2NF = ~BMVG3VX & ~ADSH,
  \[37]  = AM3,
  SMVG4VG1VAD2NF = ~ADDVG4VSN & ADSH,
  AMVG5VG1VAD1NF = ~IINIIT & AX3,
  \[38]  = AM2,
  AD0N = ~AX0 | MRVQN0,
  BMVG5VG1VAD1NF = ~READYN & ~MRVQN3,
  MRVG1VD = ~MRVG1VDVAD1NF & ~MRVG1VDVAD2NF,
  \[39]  = AM1,
  AMVG3VG1VAD2NF = IINIIT & A1,
  ADDVG2VCN = ~ADDVG2VCNVAD1NF & ~ADDVG2VCNVAD2NF,
  AD1N = ~AX1 | MRVQN0,
  BMVG3VG1VAD2NF = READYN & B1,
  ADDVG3VCNVOR2NF = ~ADDVG2VCN | (~AD2N | ~ACVQN2),
  SMVG2VX = ~SMVG2VG1VAD1NF & ~SMVG2VG1VAD2NF,
  AD2N = ~AX2 | MRVQN0,
  ADDVG2VCNVOR1NF = ~AD1N | ~ACVQN1,
  SMVG3VG1VAD2NF = ~ADDVG3VSN & ADSH,
  ADDVG4VCNVAD1NF = ~AD3N & ~ACVQN3,
  AMVG4VG1VAD1NF = ~IINIIT & AX2,
  AD3N = ~AX3 | MRVQN0,
  BMVG2VX = ~BMVG2VG1VAD1NF & ~BMVG2VG1VAD2NF,
  AMVG2VX = ~AMVG2VG1VAD1NF & ~AMVG2VG1VAD2NF,
  BMVG4VG1VAD1NF = ~READYN & ~MRVQN2,
  CNTVG3VD = ~START & ~CNTVG3VZ,
  CNTVG3VZ = ~CNTVG3VZ1 | ~CNTVG3VG2VOR1NF,
  MRVG4VDVAD1NF = ~ADDVG1VP & ADSH,
  ADDVG3VCNVAD1NF = ~AD2N & ~ACVQN2,
  MRVG4VD = ~MRVG4VDVAD1NF & ~MRVG4VDVAD2NF,
  SMVG2VG1VAD1NF = ~ADSH & ~ACVQN0,
  AMVG3VG1VAD1NF = ~IINIIT & AX1,
  \[15]  = ~ACVQN0,
  BMVG3VG1VAD1NF = ~READYN & ~MRVQN1,
  \[40]  = AM0,
  \[16]  = ~ACVQN1,
  CNTVG3VZ1 = CNTVCON1 | ~CT2,
  SMVG5VX = ~SMVG5VG1VAD1NF & ~SMVG5VG1VAD2NF,
  ADDVG4VCNVAD4NF = ~ADDVG3VCN & (~AD3N & ~ACVQN3),
  \[17]  = ~ACVQN2,
  BMVG5VX = ~BMVG5VG1VAD1NF & ~BMVG5VG1VAD2NF,
  AMVG5VX = ~AMVG5VG1VAD1NF & ~AMVG5VG1VAD2NF,
  \[18]  = ~ACVQN3,
  READYN = ~CT0 | (CT1 | ~CT2),
  P0 = \[19] ,
  P1 = \[20] ,
  \[19]  = ~MRVQN0,
  P2 = \[21] ,
  P3 = \[22] ,
  P4 = \[15] ,
  P5 = \[16] ,
  P6 = \[17] ,
  P7 = \[18] ,
  SMVG5VG1VAD1NF = ~ADSH & ~ACVQN3;
always begin
  MRVQN0 = \[36] ;
  MRVQN1 = \[35] ;
  MRVQN2 = \[34] ;
  MRVQN3 = \[33] ;
  CT0 = \[28] ;
  CT1 = \[27] ;
  CT2 = \[26] ;
  ACVQN0 = \[32] ;
  ACVQN1 = \[31] ;
  ACVQN2 = \[30] ;
  ACVQN3 = \[29] ;
  AX0 = \[40] ;
  AX1 = \[39] ;
  AX2 = \[38] ;
  AX3 = \[37] ;
end
initial begin
  MRVQN0 = 0;
  MRVQN1 = 0;
  MRVQN2 = 0;
  MRVQN3 = 0;
  CT0 = 0;
  CT1 = 0;
  CT2 = 0;
  ACVQN0 = 0;
  ACVQN1 = 0;
  ACVQN2 = 0;
  ACVQN3 = 0;
  AX0 = 0;
  AX1 = 0;
  AX2 = 0;
  AX3 = 0;
end
endmodule


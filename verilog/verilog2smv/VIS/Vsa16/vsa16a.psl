
DEFINE
pc_0 := m_vsa16a.PC[0:0];
npc_0 := m_vsa16a.NPC[0:0];
state_2 := m_vsa16a.State[2:2];
state_1_0 := m_vsa16a.State[1:0];
state_2_1 := m_vsa16a.State[2:1];
opcode_2_0 := m_vsa16a.opcode[2:0];
adFld1_1_0 := m_vsa16a.adFld1[1:0];
adFld2_1_0 := m_vsa16a.adFld2[1:0];
funFld_2_0 := m_vsa16a.funFld[2:0];
funFld_2_1 := m_vsa16a.funFld[2:1];
aluOut_15_0 := m_vsa16a.ALUOutput[15:0];
a_15_0 := m_vsa16a.A_SUBSTITUTED[15:0];
b_15_0 := m_vsa16a.B[15:0];
regs_0 := m_vsa16a.Registers[0];

PSLSPEC
always (pc_0 = 0d1_0 & npc_0 = 0d1_0);

PSLSPEC
always (regs_0 = 0d16_0);

PSLSPEC
always (state_2 = 0d1_0 | state_1_0 = 0d2_0);

PSLSPEC
always (!(adFld1_1_0 = adFld2_1_0) | (state_2_1 = 0d2_0 | a_15_0 = b_15_0));

PSLSPEC
always (!(opcode_2_0 = 0b3_010 & state_2 = 0d1_1) | ((m_vsa16a.Cond = 0d1_0 | a_15_0 = 0d16_0) & (!(a_15_0 = 0d16_0) | m_vsa16a.Cond = 0d1_1)));

PSLSPEC
always (!(opcode_2_0 = 0b3_011 & funFld_2_0 = 0b3_100 & adFld1_1_0 = adFld2_1_0) | (state_2 = 0d1_0 | aluOut_15_0 = 0d16_0));

PSLSPEC
always (!(opcode_2_0 = 0b3_011 & funFld_2_1 = 0b2_01 & adFld1_1_0 = adFld2_1_0) | (state_2 = 0d1_0 | aluOut_15_0 = a_15_0));

PSLSPEC
always (!(opcode_2_0 = 0b3_011 & funFld_2_0 = 0b3_001 & adFld1_1_0 = adFld2_1_0) | (state_2 = 0d1_0 | aluOut_15_0 = 0d16_0));
